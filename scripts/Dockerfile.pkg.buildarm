# This dockerfile builds pkg binary at /kikoeru/package and node bindings for ARM64 and ARMv7
# It's for cross architecture build on GitHub Actions'
# You shouldn't run this dockerfile unless you know what you are doing
ARG FRONTEND_VERSION="unstable"
FROM muveex/kikoeru-quasar:${FRONTEND_VERSION} as frontend

# Note: pkg prebuilt base binaries are based on Node v14.4.0
# node:14.4.0-buster uses GLIBC 2.28
# This GLIBC version will be used when building node-sqlite3 bindings (the node_sqlite3.node)
# However, GLIBC of Ubuntu:18.04 is 2.27, which is lower
# So I changed this line to node:14.4.0-stretch, which has GLIBC 2.24
FROM node:14.4.0-stretch as build-dep

RUN npm install -g pkg

# Download the pkg prebuilt binary
ARG PKG_BINARY_URL_ARM64="https://github.com/yao-pkg/pkg-binaries/releases/download/node14/fetched-v14.4.0-linux-arm64"
ARG PKG_BINARY_URL_ARMv7="https://github.com/kikoeru-project/pkg-binaries/releases/download/node14/fetched-v14.4.0-linux-armv7"
ADD ${PKG_BINARY_URL_ARM64} /root/.pkg-cache/v2.6/
ADD ${PKG_BINARY_URL_ARMv7} /root/.pkg-cache/v2.6/

RUN apt-get update && apt-get install -y -q python build-essential 

# Create app directory
WORKDIR /kikoeru

COPY package.json package-lock.json ./
RUN npm ci --only=production

# Copy frontend artifacts
COPY --from=frontend /var/www /kikoeru/dist

# Bundle app source
COPY . .

# Silence pkg warnings
RUN mkdir -p config sqlite covers VoiceWork
# Build pkg single binary to /kikoeru/package
ARG PKG_TARGET_PLATFORM="node14-arm64-linux"
RUN pkg package.json -t ${PKG_TARGET_PLATFORM} --out-path package
